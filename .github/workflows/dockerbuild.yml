name: Docker

on: [push, pull_request]

jobs:
  #test building image for PR without push
  test:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build web image
        shell: bash
        run: |
          docker buildx build \
            -f ./ScriptureRenderingPipeline/Dockerfile \
            --platform linux/amd64,linux/arm64 \
            .

  #build and push image
  push:

    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    needs: [test]

    steps:
      - uses: actions/checkout@v2
      - uses: FranzDiebold/github-env-vars-action@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: install buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      - name: Set the value
        id: step_one
        run: |
          echo "DOCKER_REPO_NAME=$CI_REPOSITORY_OWNER_SLUG/$CI_REPOSITORY_NAME_SLUG" >> $GITHUB_ENV
          
      - name: Log into registry
        shell: bash
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USER }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build and Push web image
        shell: bash
        run: |
          docker buildx build \
            --push \
            --platform linux/amd64,linux/arm64 \
            -t $DOCKER_REPO_NAME:$GITHUB_SHA \
            -t $DOCKER_REPO_NAME:$GITHUB_REF_NAME \
            -t $DOCKER_REPO_NAME:latest \
            -f ./ScriptureRenderingPipeline/Dockerfile \
            .
            
